<!-- ##### SECTION Title ##### -->
Accelerator Groups

<!-- ##### SECTION Short_Description ##### -->
Groups of global keyboard accelerators for an entire GtkWindow

<!-- ##### SECTION Long_Description ##### -->
<para>
A #GtkAccelGroup represents a group of keyboard accelerators,
typically attached to a toplevel #GtkWindow (with
gtk_window_add_accel_group()). Usually you won't need to create a
#GtkAccelGroup directly; instead, when using #GtkItemFactory, GTK+
automatically sets up the accelerators for your menus in the item
factory's #GtkAccelGroup.
</para>

<para>
Note that <firstterm>accelerators</firstterm> are different from
<firstterm>mnemonics</firstterm>. Accelerators are shortcuts for
activating a menu item; they appear alongside the menu item they're a
shortcut for. For example "Ctrl+Q" might appear alongside the "Quit"
menu item. Mnemonics are shortcuts for GUI elements such as text
entries or buttons; they appear as underlined characters. See
gtk_label_new_with_mnemonic(). Menu items can have both accelerators
and mnemonics, of course.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
gtk_window_add_accel_group(), gtk_accel_map_change_entry(),
gtk_item_factory_new(), gtk_label_new_with_mnemonic()
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GtkAccelGroup ##### -->
<para>
An object representing and maintaining a group of accelerators.
</para>


<!-- ##### SIGNAL GtkAccelGroup::accel-activate ##### -->
<para>

</para>

@accelgroup: the object which received the signal.
@arg1: 
@arg2: 
@arg3: 
@Returns: 

<!-- ##### SIGNAL GtkAccelGroup::accel-changed ##### -->
<para>

</para>

@accelgroup: the object which received the signal.
@arg1: 
@arg2: 
@arg3: 

<!-- ##### ARG GtkAccelGroup:is-locked ##### -->
<para>

</para>

<!-- ##### ARG GtkAccelGroup:modifier-mask ##### -->
<para>

</para>

<!-- ##### FUNCTION gtk_accel_group_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### MACRO gtk_accel_group_ref ##### -->
<para>
Deprecated equivalent of g_object_ref().
</para>

@Returns: the accel group that was passed in


<!-- ##### MACRO gtk_accel_group_unref ##### -->
<para>
Deprecated equivalent of g_object_unref().
</para>



<!-- ##### FUNCTION gtk_accel_group_connect ##### -->
<para>

</para>

@accel_group: 
@accel_key: 
@accel_mods: 
@accel_flags: 
@closure: 


<!-- ##### FUNCTION gtk_accel_group_connect_by_path ##### -->
<para>

</para>

@accel_group: 
@accel_path: 
@closure: 


<!-- ##### USER_FUNCTION GtkAccelGroupActivate ##### -->
<para>

</para>

@accel_group: 
@acceleratable: 
@keyval: 
@modifier: 
@Returns: 


<!-- ##### USER_FUNCTION GtkAccelGroupFindFunc ##### -->
<para>

</para>

@key: 
@closure: 
@data: 
@Returns: 
@Since: 2.2


<!-- ##### FUNCTION gtk_accel_group_disconnect ##### -->
<para>

</para>

@accel_group: 
@closure: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_group_disconnect_key ##### -->
<para>

</para>

@accel_group: 
@accel_key: 
@accel_mods: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_group_query ##### -->
<para>

</para>

@accel_group: 
@accel_key: 
@accel_mods: 
@n_entries: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_group_activate ##### -->
<para>

</para>

@accel_group: 
@accel_quark: 
@acceleratable: 
@accel_key: 
@accel_mods: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_group_lock ##### -->
<para>

</para>

@accel_group: 


<!-- ##### FUNCTION gtk_accel_group_unlock ##### -->
<para>

</para>

@accel_group: 


<!-- ##### FUNCTION gtk_accel_group_get_is_locked ##### -->
<para>

</para>

@accel_group: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_group_from_accel_closure ##### -->
<para>

</para>

@closure: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_group_get_modifier_mask ##### -->
<para>

</para>

@accel_group: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_groups_activate ##### -->
<para>

</para>

@object: 
@accel_key: 
@accel_mods: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_groups_from_object ##### -->
<para>

</para>

@object: 
@Returns: 


<!-- ##### FUNCTION gtk_accel_group_find ##### -->
<para>

</para>

@accel_group: 
@find_func: 
@data: 
@Returns: 


<!-- ##### STRUCT GtkAccelKey ##### -->
<para>

</para>

@accel_key: 
@accel_mods: 
@accel_flags: 

<!-- ##### FUNCTION gtk_accelerator_valid ##### -->
<para>

</para>

@keyval: 
@modifiers: 
@Returns: 


<!-- ##### FUNCTION gtk_accelerator_parse ##### -->
<para>

</para>

@accelerator: 
@accelerator_key: 
@accelerator_mods: 


<!-- ##### FUNCTION gtk_accelerator_name ##### -->
<para>

</para>

@accelerator_key: 
@accelerator_mods: 
@Returns: 


<!-- ##### FUNCTION gtk_accelerator_get_label ##### -->
<para>

</para>

@accelerator_key: 
@accelerator_mods: 
@Returns: 


<!-- ##### FUNCTION gtk_accelerator_set_default_mod_mask ##### -->
<para>

</para>

@default_mod_mask: 


<!-- ##### FUNCTION gtk_accelerator_get_default_mod_mask ##### -->
<para>

</para>

@Returns: 


