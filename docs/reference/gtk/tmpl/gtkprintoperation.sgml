<!-- ##### SECTION Title ##### -->
GtkPrintOperation

<!-- ##### SECTION Short_Description ##### -->
High-level Printing API

<!-- ##### SECTION Long_Description ##### -->
<para>
GtkPrintOperation is the high-level, portable printing API. It looks 
a bit different than other GTK+ dialogs such as the #GtkFileChooser, 
since some platforms don't expose enough infrastructure to implement
a good print dialog. On such platforms, GtkPrintOperation uses the 
native print dialog. On platforms which do not provide a native 
print dialog, GTK+ uses its own, see #GtkPrintUnixDialog.
</para>

<para>
The typical way to use the high-level printing API is to create a 
#GtkPrintOperation object with gtk_print_operation_new() when the user 
selects to print. Then you set some properties on it, e.g. the page size, 
any #GtkPrintSettings from previous print operations, the number of pages, 
the current page, etc. 
</para>
<para>
Then you start the print operation by calling gtk_print_operation_run().
It will then show a dialog, let the user select a printer and options. 
When the user finished the dialog various signals will be emitted on the 
#GtkPrintOperation, the main one being ::draw-page, which you are supposed 
to catch and render the page on the provided #GtkPrintContext using Cairo.
</para>

<example>
<title>The high-level printing API</title>
<programlisting>
static GtkPrintSettings *settings = NULL;

static void
do_print (void)
{
  GtkPrintOperation *print;
  GtkPrintOperationResult res;

  print = gtk_print_operation_new (<!-- -->);

  if (settings != NULL) 
    gtk_print_operation_set_print_settings (print, settings);

  g_signal_connect (print, "begin_print", G_CALLBACK (begin_print), NULL);
  g_signal_connect (print, "draw_page", G_CALLBACK (draw_page), NULL);

  res = gtk_print_operation_run (print, GTK_WINDOW (main_window), NULL);

  if (res == GTK_PRINT_OPERATION_RESULT_APPLY)
    {
      if (settings != NULL)
        g_object_unref (settings);
      settings = g_object_ref (gtk_print_operation_get_print_settings (print));
    }

  g_object_unref (print);
}

</programlisting>
</example>

<para>
Printing support was added in GTK+ 2.10.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#GtkPrintContext, #GtkPrintUnixDialog
</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### STRUCT GtkPrintOperation ##### -->
<para>

</para>


<!-- ##### SIGNAL GtkPrintOperation::begin-print ##### -->
<para>

</para>

@printoperation: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL GtkPrintOperation::draw-page ##### -->
<para>

</para>

@printoperation: the object which received the signal.
@arg1: 
@arg2: 

<!-- ##### SIGNAL GtkPrintOperation::end-print ##### -->
<para>

</para>

@printoperation: the object which received the signal.
@arg1: 

<!-- ##### SIGNAL GtkPrintOperation::request-page-setup ##### -->
<para>

</para>

@printoperation: the object which received the signal.
@arg1: 
@arg2: 
@arg3: 

<!-- ##### SIGNAL GtkPrintOperation::status-changed ##### -->
<para>

</para>

@printoperation: the object which received the signal.

<!-- ##### ARG GtkPrintOperation:current-page ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:default-page-setup ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:job-name ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:number-of-pages ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:pdf-target ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:print-settings ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:show-dialog ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:status ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:status-string ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:unit ##### -->
<para>

</para>

<!-- ##### ARG GtkPrintOperation:use-full-page ##### -->
<para>

</para>

<!-- ##### ENUM GtkPrintStatus ##### -->
<para>

</para>

@GTK_PRINT_STATUS_INITIAL: 
@GTK_PRINT_STATUS_PREPARING: 
@GTK_PRINT_STATUS_GENERATING_DATA: 
@GTK_PRINT_STATUS_SENDING_DATA: 
@GTK_PRINT_STATUS_PENDING: 
@GTK_PRINT_STATUS_PENDING_ISSUE: 
@GTK_PRINT_STATUS_PRINTING: 
@GTK_PRINT_STATUS_FINISHED: 
@GTK_PRINT_STATUS_FINISHED_ABORTED: 

<!-- ##### ENUM GtkPrintOperationResult ##### -->
<para>

</para>

@GTK_PRINT_OPERATION_RESULT_ERROR: 
@GTK_PRINT_OPERATION_RESULT_APPLY: 
@GTK_PRINT_OPERATION_RESULT_CANCEL: 

<!-- ##### ENUM GtkPrintError ##### -->
<para>

</para>

@GTK_PRINT_ERROR_GENERAL: 
@GTK_PRINT_ERROR_INTERNAL_ERROR: 
@GTK_PRINT_ERROR_NOMEM: 

<!-- ##### MACRO GTK_PRINT_ERROR ##### -->
<para>
The #GQuark used for #GtkPrintError errors.
</para>



<!-- ##### FUNCTION gtk_print_operation_new ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gtk_print_operation_set_default_page_setup ##### -->
<para>

</para>

@op: 
@default_page_setup: 


<!-- ##### FUNCTION gtk_print_operation_get_default_page_setup ##### -->
<para>

</para>

@op: 
@Returns: 


<!-- ##### FUNCTION gtk_print_operation_set_print_settings ##### -->
<para>

</para>

@op: 
@print_settings: 


<!-- ##### FUNCTION gtk_print_operation_get_print_settings ##### -->
<para>

</para>

@op: 
@Returns: 


<!-- ##### FUNCTION gtk_print_operation_set_job_name ##### -->
<para>

</para>

@op: 
@job_name: 


<!-- ##### FUNCTION gtk_print_operation_set_nr_of_pages ##### -->
<para>

</para>

@op: 
@n_pages: 


<!-- ##### FUNCTION gtk_print_operation_set_current_page ##### -->
<para>

</para>

@op: 
@current_page: 


<!-- ##### FUNCTION gtk_print_operation_set_use_full_page ##### -->
<para>

</para>

@op: 
@full_page: 


<!-- ##### FUNCTION gtk_print_operation_set_unit ##### -->
<para>

</para>

@op: 
@unit: 


<!-- ##### FUNCTION gtk_print_operation_set_show_dialog ##### -->
<para>

</para>

@op: 
@show_dialog: 


<!-- ##### FUNCTION gtk_print_operation_set_pdf_target ##### -->
<para>

</para>

@op: 
@filename: 


<!-- ##### FUNCTION gtk_print_operation_run ##### -->
<para>

</para>

@op: 
@parent: 
@error: 
@Returns: 


<!-- ##### FUNCTION gtk_print_operation_run_async ##### -->
<para>

</para>

@op: 
@parent: 


<!-- ##### FUNCTION gtk_print_operation_get_status ##### -->
<para>

</para>

@op: 
@Returns: 


<!-- ##### FUNCTION gtk_print_operation_get_status_string ##### -->
<para>

</para>

@op: 
@Returns: 


<!-- ##### FUNCTION gtk_print_operation_is_finished ##### -->
<para>

</para>

@op: 
@Returns: 


<!-- ##### FUNCTION gtk_print_run_page_setup_dialog ##### -->
<para>

</para>

@parent: 
@page_setup: 
@settings: 
@Returns: 


<!-- ##### USER_FUNCTION GtkPageSetupDoneFunc ##### -->
<para>

</para>

@page_setup: 
@data: 


<!-- ##### FUNCTION gtk_print_run_page_setup_dialog_async ##### -->
<para>

</para>

@parent: 
@page_setup: 
@settings: 
@done_cb: 
@data: 


