<!-- ##### SECTION Title ##### -->
GtkLabel

<!-- ##### SECTION Short_Description ##### -->
A widget that displays a small to medium amount of text.

<!-- ##### SECTION Long_Description ##### -->
<para>
The #GtkLabel widget is usually used directly by the programmer to display
word(s) describing an adjacent widget or its use.  It is also used internally
by Gtk+ as #GtkButton labels, #GtkMenu items, and many other widgets which
use text.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### STRUCT GtkLabel ##### -->
<para>
This should not be accessed directly.  Use the accessor functions as
described below.
</para>


<!-- ##### FUNCTION gtk_label_new ##### -->
<para>

</para>

@str: 
@Returns:


<!-- ##### FUNCTION gtk_label_set_text ##### -->
<para>

</para>

@label: 
@str: 


<!-- ##### FUNCTION gtk_label_set_attributes ##### -->
<para>

</para>

@label: 
@attrs: 


<!-- ##### FUNCTION gtk_label_set_markup ##### -->
<para>

</para>

@label: 
@str: 


<!-- ##### FUNCTION gtk_label_set_markup_with_mnemonic ##### -->
<para>

</para>

@label: 
@str: 


<!-- ##### FUNCTION gtk_label_set_pattern ##### -->
<para>
The pattern of underlines you want under the existing text within the
#GtkLabel widget.  For example if the current text of the label says
&quot;FooBarBaz&quot; passing a pattern of &quot;___   ___&quot; will underline
&quot;Foo&quot; and &quot;Baz&quot; but not &quot;Bar&quot;.
</para>

@label: The #GtkLabel you want to set the pattern to.
@pattern: The pattern as described above.


<!-- ##### FUNCTION gtk_label_set_justify ##### -->
<para>

</para>

@label: 
@jtype: 


<!-- ##### FUNCTION gtk_label_get ##### -->
<para>
Gets the current string of text within the #GtkLabel and writes it to
the given @str argument.  It does not make a copy of this string so you
must not write to it.
</para>

@label: The #GtkLabel widget you want to get the text from.
@str: The reference to the pointer you want to point to the text.


<!-- ##### FUNCTION gtk_label_parse_uline ##### -->
<para>
Parses the given string for underscores and converts the next
character to an underlined character.  The last character that
was underlined will have its lower-cased accelerator keyval returned  (i.e.
&quot;_File&quot; would return the keyval for &quot;f&quot;.  This is
probably only used within the Gtk+ library itself for menu items and such.
</para>

@label: The #GtkLabel you want to affect.
@string: The string you want to parse for underlines.
@Returns: The lowercase keyval of the last character underlined.


<!-- ##### FUNCTION gtk_label_set_line_wrap ##### -->
<para>

</para>

@label: 
@wrap: 


<!-- ##### MACRO gtk_label_set ##### -->
<para>
Aliases gtk_label_set_text().  Probably used for backward compatibility with
Gtk+ 1.0.x.
</para>



<!-- ##### FUNCTION gtk_label_get_layout_offsets ##### -->
<para>

</para>

@label: 
@x: 
@y: 


<!-- ##### FUNCTION gtk_label_get_mnemonic_keyval ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_selectable ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_text ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_new_with_mnemonic ##### -->
<para>

</para>

@str: 
@Returns: 


<!-- ##### FUNCTION gtk_label_select_region ##### -->
<para>

</para>

@label: 
@start_offset: 
@end_offset: 


<!-- ##### FUNCTION gtk_label_set_mnemonic_widget ##### -->
<para>

</para>

@label: 
@widget: 


<!-- ##### FUNCTION gtk_label_set_selectable ##### -->
<para>

</para>

@label: 
@setting: 


<!-- ##### FUNCTION gtk_label_set_text_with_mnemonic ##### -->
<para>

</para>

@label: 
@str: 


<!-- ##### FUNCTION gtk_label_get_attributes ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_justify ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_label ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_layout ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_line_wrap ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_mnemonic_widget ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_selection_bounds ##### -->
<para>

</para>

@label: 
@start: 
@end: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_use_markup ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_get_use_underline ##### -->
<para>

</para>

@label: 
@Returns: 


<!-- ##### FUNCTION gtk_label_set_label ##### -->
<para>

</para>

@label: 
@str: 


<!-- ##### FUNCTION gtk_label_set_use_markup ##### -->
<para>

</para>

@label: 
@setting: 


<!-- ##### FUNCTION gtk_label_set_use_underline ##### -->
<para>

</para>

@label: 
@setting: 


<!-- ##### SIGNAL GtkLabel::copy-clipboard ##### -->
<para>

</para>

@label: the object which received the signal.

<!-- ##### SIGNAL GtkLabel::move-cursor ##### -->
<para>

</para>

@label: the object which received the signal.
@arg1: 
@arg2: 
@arg3: 

<!-- ##### SIGNAL GtkLabel::populate-popup ##### -->
<para>

</para>

@label: the object which received the signal.
@arg1: 

<!-- ##### ARG GtkLabel:label ##### -->
<para>
The actual label text.  Do not write to this pointer, it is not copied.
</para>

<!-- ##### ARG GtkLabel:attributes ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:use-markup ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:use-underline ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:justify ##### -->
<para>
The #GtkJustification setting.  See gtk_label_set_justify() for more info.
</para>

<!-- ##### ARG GtkLabel:pattern ##### -->
<para>
The pattern of underlines under the existing text.  Do not change the
pointer, it isn't copied.
</para>

<!-- ##### ARG GtkLabel:wrap ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:selectable ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:mnemonic-keyval ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:mnemonic-widget ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:cursor-position ##### -->
<para>

</para>

<!-- ##### ARG GtkLabel:selection-bound ##### -->
<para>

</para>

