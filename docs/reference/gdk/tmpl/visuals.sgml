<!-- ##### SECTION Title ##### -->
Visuals

<!-- ##### SECTION Short_Description ##### -->

Low-level display hardware information

<!-- ##### SECTION Long_Description ##### -->
<para>
A #GdkVisual describes a particular video hardware display format.  For example,
a piece of display hardware might support 24-bit color, 16-bit color, or 8-bit
color; meaning 24/16/8-bit pixel sizes. For a given pixel size, pixels can be in
different formats; for example the "red" element of an RGB pixel may be in the
top 8 bits of the pixel, or may be in the lower 4 bits.
</para>

<para>
Usually you can avoid thinking about visuals in GTK+. Visuals are useful to
interpret the contents of a #GdkImage, but you should avoid #GdkImage precisely
because its contents depend on the display hardware; use #GdkPixbuf instead, for
all but the most low-level purposes. Also, anytime you provide a #GdkColormap,
the visual is implied as part of the colormap (gdk_colormap_get_visual()), so
you won't have to provide a visual in addition.
</para>

<!-- ##### SECTION See_Also ##### -->
<para>
#GdkImage, #GdkColormap
</para>

<!-- ##### STRUCT GdkVisual ##### -->
<para>
Description of an image data format
</para>

@parent_instance: inherited portion from #GObject
@type: 
@depth: 
@byte_order: 
@colormap_size: 
@bits_per_rgb: 
@red_mask: 
@red_shift: 
@red_prec: 
@green_mask: 
@green_shift: 
@green_prec: 
@blue_mask: 
@blue_shift: 
@blue_prec: 

<!-- ##### STRUCT GdkVisualClass ##### -->
<para>

</para>


<!-- ##### ENUM GdkVisualType ##### -->
<para>

</para>

@GDK_VISUAL_STATIC_GRAY: 
@GDK_VISUAL_GRAYSCALE: 
@GDK_VISUAL_STATIC_COLOR: 
@GDK_VISUAL_PSEUDO_COLOR: 
@GDK_VISUAL_TRUE_COLOR: 
@GDK_VISUAL_DIRECT_COLOR: 

<!-- ##### ENUM GdkByteOrder ##### -->
<para>

</para>

@GDK_LSB_FIRST: 
@GDK_MSB_FIRST: 

<!-- ##### FUNCTION gdk_query_depths ##### -->
<para>

</para>

@depths: 
@count: 


<!-- ##### FUNCTION gdk_query_visual_types ##### -->
<para>

</para>

@visual_types: 
@count: 


<!-- ##### FUNCTION gdk_list_visuals ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gdk_visual_get_best_depth ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gdk_visual_get_best_type ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gdk_visual_get_system ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gdk_visual_get_best ##### -->
<para>

</para>

@Returns: 


<!-- ##### FUNCTION gdk_visual_get_best_with_depth ##### -->
<para>

</para>

@depth: 
@Returns: 


<!-- ##### FUNCTION gdk_visual_get_best_with_type ##### -->
<para>

</para>

@visual_type: 
@Returns: 


<!-- ##### FUNCTION gdk_visual_get_best_with_both ##### -->
<para>

</para>

@depth: 
@visual_type: 
@Returns: 


<!-- ##### MACRO gdk_visual_ref ##### -->
<para>
Deprecated equivalent of g_object_ref().
</para>

@v: 
@Returns: 


<!-- ##### MACRO gdk_visual_unref ##### -->
<para>
Deprecated equivalent of g_object_unref().
</para>

@v: 


