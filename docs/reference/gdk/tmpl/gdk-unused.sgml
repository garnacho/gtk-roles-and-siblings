<!-- ##### SECTION ./tmpl/color_contexts.sgml:Long_Description ##### -->
<para>
The #GdkColorContext type is used for allocating groups of colors.
</para>
<para>
It is now deprecated in favor of the gdk_colormap_*() functions described in
the <link linkend="gdk-Colormaps-and-Colors">Colormaps and Colors</link>
section.
</para>


<!-- ##### SECTION ./tmpl/color_contexts.sgml:See_Also ##### -->
<para>

</para>


<!-- ##### SECTION ./tmpl/color_contexts.sgml:Short_Description ##### -->
routines for allocating colors (deprecated).


<!-- ##### SECTION ./tmpl/color_contexts.sgml:Title ##### -->
Color Contexts


<!-- ##### MACRO GDK_CORE_POINTER ##### -->
<para>
This macro contains an integer value representing
the device ID for the core pointer device.
</para>


<!-- ##### STRUCT GdkColorContext ##### -->
<para>

</para>

@visual: 
@colormap: 
@num_colors: 
@max_colors: 
@num_allocated: 
@mode: 
@need_to_free_colormap: 
@std_cmap_atom: 
@clut: 
@cmap: 
@color_hash: 
@palette: 
@num_palette: 
@fast_dither: 

<!-- ##### STRUCT GdkColorContextDither ##### -->
<para>

</para>

@fast_rgb: 
@fast_err: 
@fast_erg: 
@fast_erb: 

<!-- ##### ENUM GdkColorContextMode ##### -->
<para>

</para>

@GDK_CC_MODE_UNDEFINED: 
@GDK_CC_MODE_BW: 
@GDK_CC_MODE_STD_CMAP: 
@GDK_CC_MODE_TRUE: 
@GDK_CC_MODE_MY_GRAY: 
@GDK_CC_MODE_PALETTE: 

<!-- ##### STRUCT GdkDeviceInfo ##### -->
<para>
The #GdkDeviceInfo structure contains information about a 
device. It has the following fields:
</para>

@deviceid: a unique integer ID for this device.
@name: the human-readable name for the device.
@source: the type of device.
@mode: a value indicating whether the device is enabled and
       how the device coordinates map to the screen.
@has_cursor: if %TRUE, a cursor will be displayed indicating 
             the current on-screen location to the user. Otherwise,
             the application is responsible for drawing a cursor 
             itself.
@num_axes: the number of axes for this device.
@axes: a pointer to an array of GdkAxisUse values which
       give the mapping of axes onto the possible valuators
       for a GDK device.
@num_keys: the number of macro buttons.
@keys: a pointer to an array of #GdkDeviceKey structures  
       which describe what key press events are generated
       for each macro button.

<!-- ##### ENUM GdkPixbufAlphaMode ##### -->
<para>

</para>

@GDK_PIXBUF_ALPHA_BILEVEL: 
@GDK_PIXBUF_ALPHA_FULL: 

<!-- ##### FUNCTION gdk_color_context_add_palette ##### -->
<para>

</para>

@cc: 
@palette: 
@num_palette: 
@Returns: 

<!-- ##### FUNCTION gdk_color_context_free ##### -->
<para>

</para>

@cc: 

<!-- ##### FUNCTION gdk_color_context_free_dither ##### -->
<para>

</para>

@cc: 

<!-- ##### FUNCTION gdk_color_context_get_index_from_palette ##### -->
<para>

</para>

@cc: 
@red: 
@green: 
@blue: 
@failed: 
@Returns: 

<!-- ##### FUNCTION gdk_color_context_get_pixel ##### -->
<para>

</para>

@cc: 
@red: 
@green: 
@blue: 
@failed: 
@Returns: 

<!-- ##### FUNCTION gdk_color_context_get_pixel_from_palette ##### -->
<para>

</para>

@cc: 
@red: 
@green: 
@blue: 
@failed: 
@Returns: 

<!-- ##### FUNCTION gdk_color_context_get_pixels ##### -->
<para>

</para>

@cc: 
@reds: 
@greens: 
@blues: 
@ncolors: 
@colors: 
@nallocated: 

<!-- ##### FUNCTION gdk_color_context_get_pixels_incremental ##### -->
<para>

</para>

@cc: 
@reds: 
@greens: 
@blues: 
@ncolors: 
@used: 
@colors: 
@nallocated: 

<!-- ##### FUNCTION gdk_color_context_init_dither ##### -->
<para>

</para>

@cc: 

<!-- ##### FUNCTION gdk_color_context_new ##### -->
<para>

</para>

@visual: 
@colormap: 
@Returns: 

<!-- ##### FUNCTION gdk_color_context_new_mono ##### -->
<para>

</para>

@visual: 
@colormap: 
@Returns: 

<!-- ##### FUNCTION gdk_color_context_query_color ##### -->
<para>

</para>

@cc: 
@color: 
@Returns: 

<!-- ##### FUNCTION gdk_color_context_query_colors ##### -->
<para>

</para>

@cc: 
@colors: 
@num_colors: 
@Returns: 

<!-- ##### FUNCTION gdk_input_list_devices ##### -->
<para>
Lists all available input devices, along with their
configuration information.
</para>

@Returns: A #GList of #GdkDeviceInfo structures. This list
          is internal data of GTK+ and should not be modified 
          or freed.

<!-- ##### FUNCTION gdk_input_motion_events ##### -->
<para>
Retrieves the motion history for a given device/window pair.
</para>

@window: a #GdkWindow.
@deviceid: the device for which to retrieve motion history.
@start: the start time.
@stop: the stop time.
@nevents_return: location to store the number of events returned.
@Returns: a newly allocated array containing all the events
          from @start to @stop. This array should be freed
          with g_free() when you are finished using it.

<!-- ##### FUNCTION gdk_input_set_axes ##### -->
<para>
Sets the mapping of the axes (valuators) of a device
onto the predefined valuator types that GTK+ understands.
</para>

@deviceid: the device to configure.
@axes: an array of GdkAxisUse. This length of this array
       must match the number of axes for the device.

<!-- ##### FUNCTION gdk_input_set_key ##### -->
<para>
Sets the key event generated when a macro button is pressed.
</para>

@deviceid: the device to configure.
@index: the index of the macro button.
@keyval: the key value for the #GdkKeypressEvent to generate.
         (a value of 0 means no event will be generated.)
@modifiers: the modifier field for the generated 
            #GdkKeyPressEvent.

<!-- ##### FUNCTION gdk_input_set_mode ##### -->
<para>
Enables or disables a device, and determines how the
device maps onto the screen.
</para>

@deviceid: the device to configure.
@mode: the new mode.
@Returns: %TRUE if the device supports the given mode, otherwise 
          %FALSE and the device's mode is unchanged.

<!-- ##### FUNCTION gdk_input_set_source ##### -->
<para>
Sets the source type for a device.
</para>

@deviceid: the device to configure
@source: the new source type.

<!-- ##### FUNCTION gdk_input_window_get_pointer ##### -->
<para>
Returns information about the current position of the pointer
within a window, including extended device information.
Any of the return parameters may be %NULL, in which case,
they will be ignored.
</para>

@window: a #GdkWindow.
@deviceid: a device ID.
@x: location to store current x postion.
@y: location to store current y postion.
@pressure: location to store current pressure.
@xtilt: location to store current tilt in the x direction.
@ytilt: location to store current tilt in the y direction.
@mask: location to store the current modifier state.

