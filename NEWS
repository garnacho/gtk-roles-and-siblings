Overview of Changes in GTK+ 1.3.7
=================================

* Many Pixbuf (loader) improvements [Matthias Clasen, Soeren Sandmann]
* Added publically installed utility gdk-pixbuf-csource to generate
  inlined pixbufs in C source code [Tim Janik]
* Optional movement of button children on press [Soeren, Owen Taylor]
* Interactive searching in GtkTreeView [Kristian Rietveld]
* Sorting/ordering improvements for GtkTreeView [Kris, Jonathan Blandford]
* Animation of expander motion for GtkTreeView [Anders Carlsson]
* Lots of misc GtkTreeView fixes and improvements [Jonathan]
* New/improved stock icons [Jakub Steiner] 
* Code and API rework for window resizing [Havoc Pennington]
* Converted accel groups to GObject [James Henstridge]
* More property support improvements
* Add facility for "secondary" buttons in 
  GtkButtonBox/GtkDialog [Gregory Merchan]
* Disentangled child visability from MAPPED state [Owen]
* Plug/Socket improvements and port to the XEMBED protocol [Owen]
* Added priorities for styles in RC files, 
  support multiple parse contents [Owen]
* Made GdkVisual and GdkDevice GObjects [Alexander Larsson]
* Key binding improvements [Havoc]
* Added GtkWidget::event-after signal since normal event handling
  is now aborted as soon as a handler returned TRUE [Tim]
* Dnd fixes and improved icon support [Owen]
* Removed GtkPacker widget
* Fixing missing paired getters/setters [Kris]
* Nuked remaining GtkArg cruft, implemented container/child properties [Tim]
* Added window grab groups [Owen]
* Many frame buffer improvements [Alex]
* Win32 fixes and improvements [Hans Breuer]
* Warning fixes [Darin Adler]
* Miscellaneous bug and API fixes [Matthias et. al]

Overview of Changes in GTK+ 1.3.6
=================================

* Properly renders strikethrough text
* win32 fixes
* Added "scale" property to GtkTextTag and GtkCellRendererText to do 
  relative font scaling
* Added "format_value" signal to GtkScale to reformat value text
* framebuffer fixes
* Property support added to lots of widgets
* Many GtkTreeView new features and API/implementation fixes
* Lots of new_with_mnemonic() convenience functions
* Change GtkImageMenuItem API to be more consistent/useful
* Added lots of new stock items/icons
* Rewrote GtkRange/GtkScale/GtkScrollbar, includes support for
  enabling/disabling extra scrollbar stepper arrows in gtkrc so NeXT
  themes won't need broken hacks
* Convenience API for GtkRange similar to the one added to GtkSpinButton
  a while back
* Make menubar/toolbar work properly with xthickness/ythickness of 1 or 0, 
  and move some attributes from program settings to user settings.
  Allows nice 1-pixel-bevel themes.
* Moved ::focus virtual function from GtkContainer to GtkWidget
* Plenty of bug fixes

Overview of Changes in GTK+ 1.3.5
=================================

* New default theme based on Raleigh theme for 1.2.x.
* Dependency on the ATK library added as a step to
  providing accessibility-enabling interfaces
* XEMBED-based GtkPlug/GtkSocket now basically works.
* Drag and drop of column headers in GtkTreeView
* GtkColorSelector work: hooks for saving and propagating palette, UI tweaks,
  and API sanitization
* Key binding fixes
* Configurable padding/spacing in a lot of places
* Invisible text in GtkTextView fixed
* SHM segments now created with a mode of 0600
* Bug fixes

Overview of Changes in GTK+ 1.3.4
=================================

* Win32 fixes
* GtkTreeView improvements and fixes
* Fix glib-2.0.m4
* Miscellaneous bug fixes

Overview of Changes in GTK+ 1.3.3
=================================

[ 5600 lines of ChangeLog ]

* API cleanups
* Win32 work (Tor, Hans Breuer)
* Focus improvements (Owen)
* Frame buffer improvements (Alex)
* Work on GtkTextView (Havoc)
* Much work on GtkTreeView (Jonathan)
* Selectable labels (Havoc)
* Converted many arguments to properties (Lee Mallabone, John Margaglione)
* Add exact regions to GdkExposeEvent, propagate it. (Alex)
* Added ability to have resize grips in status bars (etc.) using
  _NET_WM_MOVERESIZE protocol. (Havoc)
* Added mnemnonic mechanism to make setting underline accelerators
  much easier. (Alex)
* Add per-style property mechanism to allow themes to change 
  geometry parameters. (Tim)
* Added global settings mechanisms for settings such as double-click
  time. (Tim, Owen)
* Various support functions for new and old WM properties (Havoc, Alex)
* Add TRUE-stops-returns for boolean-returning signals (Ron Steinke)

Overview of Changes in GTK+ 1.3.2
=================================

GTK Core:

* New stock-icon and stock-item system. Use themeable pixbufs in
  dialogs, buttons, etc. [Havoc]
* Theme engines reworked to use derivation and new object system. [Owen]
* Added GtkClipboard object for simple selection handling. [Owen]
* Make GtkEditable an interface, move implementation to GtkOldEditable for
  compat. [Owen]
* Better handling of default directionality. [Robert]
* Use GSignal as backend for GtkSignal and other GObject stuff. [Tim]
* Move theme engines to GTypePlugin. [Owen]

GDK:

* Beginning of implementation of client parts of new window manager spec. [Owen]
* Make gdk_drawable_get_image() work with backing store. [Havoc]

Widgets:

* New text widget [Havoc]
  - Adjustable tab handling.
  - Ability to have scrolling side areas in new text widget for tabs/line numbers.
  - Many cleanups and small improvements.
* Improvements to submenu navigation [Nils Barth/David Santiago] and
  scrolling menus. [Alex]
* Simplification of progress bar API. [Havoc]
* Make GtkImage a generic image-display widget. [Havoc]
* New GtkTreeView tree widget. Model/view architecture, flexible renderering,
  large datasets, etc. [Jonathan]
* New GtkMessageBox widget for message display. [Havoc]
* Allow labels to have contents set from XML-like markup language. [Havoc]
* Make dialogs derive from GtkDialog and use stock buttons. [Havoc]

Internationalization:

* Proper character set conversion for clipboard/selection. [Owen]
* New input method system via loadable modules; support on-the-spot
  preedit in GtkEntry and new text widget; allow switchin input methods
  on the fly; include modules for XIM and demo Cyrillic-tranliteration 
  module. [Owen]
* VIQR, Thai, and Inuktitut input methods. [Robert]
* Convert po files to UTF-8. [Robert]

gdk-pixbuf:

* Full-alpha compositing for gdk-pixbuf on drawable. [Havoc]
* Add simple saving to gdk-pixbuf. [David Welton/Havoc]
* Add improved error handling with GError to gdk-pixbuf. [Havoc]

Ports:

* Much work on Win32 Port. [Tor/Hans]
* Much work on Linux-FB Port. [Elliot/Alex]

Misc:

* Start of new gtk-demo demo program. [Owen/Jonathan]
* Bug fixes and more bug fixes.


Overview of Changes in GTK+ 1.3.1:

* GTK+ now uses the Pango library for text manipulation. All
  strings in GTK+ now are in Unicode, languages written
  from right-to-left, and complex-text languages are now supported.
* The gdk-pixbuf library for image loading and manipulation is 
  has been integrated with GTK+.
* The GTK+ object system has mostly been moved to GLib, separating
  it from the GUI code. Many significant enhancements have been
  made as part of this.
* A new text widget is now included. This started as a port
  of the Tk text widget, and includes such features of the Tk
  text widget as tags, marks, and unicode text support. It
  has been enhanced to support model-view operation and the
  full power of Pango.
* The GDK library has been extensively revised to support multiple
  windowing systems. The only fully functional backend in 1.3.1
  is the X11 backend, however, ports to Win32, Linux-framebuffer,
  Nano-X, BeOS, and MacOS exist in various states of completion,
  and at least some of these will be finished and integrated in 
  before the final GTK+-2.0 release.
* 32-bit coordinates are now supported throughout GDK and GTK+
  (they are emulated where not supported by the windowing system.)
* Many minor bug fixes and enhancements. Incompatible changes
  are documented in docs/Changes-2.0.txt

Overview of Changes in GTK+ 1.2.8:

* GNU Make 3.79 bug workaround
* FAQ and tutorial updates and improvements
* Miscellaneous bug fixes: CList, Calendar, rc-files, FontSelection

Overview of Changes in GTK+ 1.2.7:

* More header cleanups.
* Fixed activation bug for insensitive widgets.
* Locale fixes to RC file parsing code.
* Miscellaneous bugfixes for Item Factory, CList, CTree, X Selections,
  HScale, VScale, Pixmap, Viewport, OptionMenu, Entry and Notebook.
* Upgrade to libtool 1.3.4.

Overview of Changes in GTK+ 1.2.6:

* container queue_resize fixes
* gtk[vh]scale: minor fixups
* rename idle to idle_id in testgtk to avoid conflicts with 
  broken libs
* More consistant naming of gtkrc files
* Added language support: ro, uk

Overview of Changes in GTK+ 1.2.5:

* more GtkCTree and GtkWindow bug fixes.
* more redraw/resize queue fixes, better expose event
  discarding code.
* more miscellaneous bugs fixed
* new configure.in option --disable-rebuilds to completely disable
  rebuilds of autogenerated sources.
* check for 5.002 now, to avoid failing autogeneration build rules due
  to old perl versions.
* fonts (and fontsets) are cached now.
* more autogeneration make rules and dependancy fixups, we should be
  save with autogeneration up to make -j12 now ;)
* new window position GTK_WIN_POS_CENTER_ALWAYS, which will recenter the
  GtkWindow on every size change.
* major rework of window manager hints handling code, fixed a bunch of
  races with the new resizing code.
* the new wm hints and resizing code is absolutely perfect and bug free now,
  it only lacks testing ;)
* fixed up various rc style memory prolems.
* gtk_widget_modify_style() now properly changes the style of realized widgets
  and references the style passed into it. if people worked around this bug,
  this will introduce a slight memory leak in their code.
  The code should typically look like:
            GtkRcStyle *rc_style = gtk_rc_style_new ();
            [...]
            gtk_widget_modify_style (widget, rc_style);
            gtk_rc_style_unref (rc_style);
* fix problems with positioning menus offscreen.
* GtkText fixes for some crashes and drawing errors.
* Better handling for unexpected window destroys in GDK and GTK+.
  This should make it possible to use a GtkPlug and catch the
  case where its parent socket is randomly killed.
* FAQ updates.
* FileSelection i18n patches, RadioButton fixups.
* many translation improvements.
* miscellaneous other bugs fixed.

Overview of Changes in GTK+ 1.2.4:

* DnD improvements (drags can be canceled with Esc now).
* suppressed configure event reordering in Gdk.
* rewrite of Gtk's configure event handling.
* major improvements for the object argument system (Elena Devdariani).
* major bugfixes for threading, GtkNotebook, GtkItemFactory, GtkCList and
  GtkCTree.
* tutorial/FAQ updates, new file generation.txt on autogenerated sources.
* configure's --with-glib= is "officially" unsupported.
* upgrade to libtool 1.3.3.
* various buglets fixed.

Overview of Changes in GTK+ 1.2.3:

* Upgrade to libtool 1.3
* Check for dgettext (for systems with old versions of GNU Gettext)
* Many bug fixes (see ChangeLog for details)

Overview of Changes in GTK+ 1.2.2:

* Improved Dnd behaviour with Motif applications.
* Bug fixes for the Gtk selection code.
* Minor bug fixes to the Gdk Atom cache and Dnd code (with --display option).
* Bug fixes and leak plugs for the Gdk IM code.
* Added gtk_object_get() facility to retrive object arguments easily.
  The var args list expects ("arg-name", &value) pairs.
* Fixed mapping for GdkInputCondition<->GIOCondition, this should fix
  problems where closed pipes were no longer signalling GDK_INPUT_READ on
  systems with a native poll().
* Some cleanups to GtkLabel's memory allocation code (shouldn't leak memory
  anymore).
* We don't attempt to lookup xpm color "None" anymore, this should prevent
  eXodus (commercial X windows server) from popping up a color dialog every
  time a transparent pixmap is created.
* Fixed bug where Gtk timout/idle handlers would execute without the global
  Gdk lock being held.
* Other minor bug fixes.

Overview of Changes in GTK+ 1.2.1:

* Many Bug fixes have been applied to the menu and accelerator code.
* GtkItemFactory can "adopt" foreign menu items now and manage their
  accelerator installation. This is often required to get GtkItemFactory
  like accelerator propagation between different windows with the same
  menu heirarchy and for centralized parsing and saving of accelerators.
* GtkCList/GtkCTree buttons should always display correctly now.
* Miscellaneous other bug fixes.

What's New in GTK+ 1.2.0 (since 1.0.x):

* New widgets: GtkFontSelector, GtkPacker, GtkItemFactory, GtkCTree,
  GtkInvisible, GtkCalendar, GtkLayout, GtkPlug, GtkSocket
* Many new features and robustness for existing widgets
* Theme support
* New DND implementation
* Internationalization of standard dialogs
* New key binding system
* Tearoff menus and menu accelerators
* Wide character support for entry and text
* Resizing code has been overhauled
* Queued redraws of partial areas
* Far better support for object arguments
* Speed optimizations
* Runtime loading of dynamic modules
* Support for GLib log domains
* Tutorial improvements
* A bug fix or two

Overview of Changes in GTK+ 1.1.16:

* Major fixes and improvements for handlebox
* A change to the way widget->requisition works. Now,
  widget->requisition is always what the widget requested,
  unmodified by the usize. See Changes-1.2.txt for details.
  This correct various bugs with gtk_widget_set_usize().
* Fixes for XIM on X11R5 systems
* Don't allow cut-and-paste of text in password-style entries
* --enable-debug is now on by default for the development releaes.
  (When compiling for "production", use --enable-debug=minimum)
* Handle systems where Helvetica is not present more gracefully
* Fixes for memory leaks
* CList and CTree fixes
* Bug fixes for drawing problems. 
* Miscellaneous bug fixes to GtkLabel, GtkCList, GtkCTree,
  GtkColorsel, Focusing, DND
* Tutorial improvements

Overview of Changes in GTK+ 1.1.15:

* Tutorial Updates
* Added --libs gthread to gtk-config 
* Bug fixes

What is new in GTK+ 1.1.14:

* Additions to docs/Changes-1.2.txt
* Just warn when loading theme engine fails
* CLAMP GtkScale digits to a meaningful range
* GTK_LOCALDIR is now defined in a better fashion
* New functions (feature freeze, we know...):
    gtk_menu_set_title()
    gtk_toggle_button_get_active()
* Some locale fixups in gtkrc code
* Fixes to make gtk_radio_button_set_group() keep only
  one radio button in the group active
* Foreign windows are now always treated as viewable; this fixes
  a problem where updating didn't occure properly in GtkPlug
* DND fixes for 64 bit architectures, and for specifying operations 
  with modifier keys.
* Major revisions to GtkLayout: avoid having to create window
  for NO_WINDOW children, adjust allocations of children as 
  scrolled so queued draws work, and a resize is queued instead
  of allocating directly in a put() or move()

What is new in GTK+ 1.1.13:

* Dnd and selection bug fixes and memory purification.
* Widget sensitivity fixups.
* Tooltips windows are now named "gtk-tooltips" so rc file rules
  can match tooltips windows. Fixed interaction of tooltips and NO_WINDOW
  widgets.
* Spin buttons now update their values upon value retrival.
* Overhaul of the resizing vs. redrawing logic to reduce redrawing needs
  a lot. Gtk makes full use of the draw_area coalescing code now, which
  got minorly improved as well.
* Containers map their Gdk windows after their children now to reduce
  expose event generation.
* Gdk event queue fixups, this solves the double-click problems people were
  recently having.
* Account for the fact that GSource's are only properly reentrant from
  within dispatch(), thus we don't do Gdk event processing from within
  check() or prepare() anymore.
* Rc files feature a bg_pixmap value of "<none>" now.
* Improved session management support in Gdk.  
* Automatic disabling of NLS if no gettext is found should work now.
* Removed deprecated functions, docs/Changes-1.2.txt gives an overview.
* Gtk+ development now requires GNU autoconf 2.13, GNU automake 1.4
  and GNU libtool 1.2d.
* More bug fixes all over the place.

What is new in GTK+ 1.1.12:

* Korean translation added
* Fixed memory leaks
* A few other bug fixes

What is new in GTK+ 1.1.11:

* Dutch, Japanese, Swedish, Polish, and Norwegian translations
* Removed deprecated _interp variants: gtk_container_foreach_interp, 
  gtk_idle_add_interp, gtk_timeout_add_interp, gtk_signal_connect_interp
* Lots of cast corrections
* Many fixes 

What is new in GTK+ 1.1.9:

* Check for broken glibc 2.0 mb functions and avoid them
* Label and Entry display fixes 
* Move main thread back to GDK, for locking when translating events
* Bug fixes

What is new in GTK+ 1.1.8:

* Added support for gettext and the localization of the standard
  dialogs.
* Added line-wrapping for the label, and JUSTIFY_FILL
* Support reordering via drag and drop in  CList and CTree.
* Replaced GtkDrawWindow widget with a GTK_USER_DRAW flag
* Extended gtkpaned API to support minimum sizes and proportional
  resizing.
* Changed the handling of shared memory segments so as to 
  remove the need for GTK+ to set up signal handlers.
* Re-implemented event loop in terms of the event loop
  that has been added to GLib 1.1.8
* Added 'grab_focus' signal to allow keyboard accelerators
  for entries.
* Load locale specific RC files if present.
* Bug fixes.

What is new in GTK+ 1.1.7:

* Fixed memory mis-allocation in default files code
* Various event handling fixes
* Wide character support for entry and text
* Destroy widgets _after_ propagating unrealize signals through 
  widget heirarchy
* Only build XIM-support if available
* Tutorial and examples updates
* Added gtk_drag_source_unset()

What is new in GTK+ 1.1.6:

* The signal system now features emission hooks whith special semantics,
  refer to the ChangeLog for this.
* Minor? speedups and memory reductions to the emission handling of the
  signal system.
* _interp() function variants are deprecated now. the corresponding *_full()
  variants are provided for a long time now.
* Dnd abort timeout increased to 10 minutes.
* GtkScrolledWindow inherits from GtkBin now.
* GTK_POLICY_NEVER is implemented for scrolled windows now.
* Lots of API clean ups.
* Incremental freezing abilities.
* Integrated widgets from the GNOME tree: GtkLayout, GtkPlug and GtkSocket.
* New window functions for transient relationship, default size, and 
  geometry hints
* Default rc files are now read in (<sysconfdir/etc/gtkrc and ~/.gtkrc)
  GTK_RC_FILES environment variable and functions are provided to configure
  this behavior
* Read doc/Changes-1.2.txt to properly adapt your code.
* Bug Fixes.

What is new in GTK+ 1.1.5:

* Theme integration
* Widget style modification is now handled through GtkRcStyles
* GtkPixmaps now grey out pixmaps when insensitive
* Notebook enhancements
* Shadow configurability for menubars and handleboxes
* DND enhancements
* gtkfilesel now supports automounters better
* Implementation of expose compression
* Queued redraws of partial areas
* Scrolledwindow (+Viewport) source incompatibilities, children that are added
  to a scrolled window don't get an automatic viewport anymore. a convenience
  function gtk_scrolled_window_add_with_viewport() is suplied for this task
* Deprecated functions will now issue a message, informing the programmer about
  the use of this function. These functions will get removed in future versions
* Non-functional functions got removed entirely
* gtk_widget_new() and gtk_object_new() will now auto-construct new objects.
  A new function gtk_object_default_construct() is provided now which should
  be called after every gtk_type_new() to perfom the auto-construction
* Improved argument support of several widgets
* Bug Fixes

What is new in GTK+ 1.1.3:

* GtkCList/GtkCTree now have the ability to:
    - hide/show individual columns
    - disable/enable column resizing
    - set min and max for column widths
    - set expander style of the ctree
    - set/get row and cell styles
    - set spacing between tree expander and cell contents in ctree
    - toggle auto_resize for columns
* Must enhanced DND support, removed old DND code
* Idle functions are now implemented via GHook, giving a slight speed
  improvement
* An environment variable GTK_MODULES which takes a colon seperated
  list of module names GTK+ will now automatically load at gtk_init() startup
* GtkFontSel now has support for an extra 'base' filter
* New function gdk_window_set_root_origin to get the real geometry taking
  into account window manager offsets
* New function gtk_text_set_line_wrap to toggle line wrapping
* New function gtk_widget_add_events which safely adds additional
  events to a widget's event mask
* New function gdk_event_get_time to get the timestamp from a generic
  event
* New widget GtkCalendar
* New widget GtkInvisible - InputOnly offscreen windows used for reliable
  pointer grabs and selection handling in DND code
* New functions gtk_object_remove_no_notify[_by_id] to remove a certain
  data portion without invokation of its destroy notifier 
* gtk_spin_button_construct is now deprecated, use gtk_spin_button_configure
  instead 
* gtk_clist_set_border is now deprecated, use gtk_clist_set_shadow_type 
  instead
* Removed functions gtk_object_set_data_destroy[_by_id] 
* Documentation additions/updates 
* HTML and plain text files are now included in the distribution
* Bug fixes, typeness corrections, and general fixups

What is new in GTK+ 1.1.2:

* Gtk+ is now featuring runtime loading of dynamic modules via the
  --gtk-modules= command line switch. such modules have to export a
  G_MODULE_EXPORT void gtk_module_init (gint *argc, gchar ***argv);
  function which will be invoked to initialize the module. since such
  modules may create new widget types, they are always resident.
* The tutorial has been updated again.
* Changes to menus including tearoff menus and accelerators.
* Better support for modal dialogs.
* Removed CAN_FOCUS by default from scrollbars and button children of toolbar.
* More improvements and fixes for GtkCList and GtkCTree (i.e. row sorting).
* GtkCTree rows can be unselectable now.
* The GtkCTree API has undergone major renames (see ChangeLog entry from Lars
  Hamann on Tue Aug 18 00:29:13 1998).
* A bunch of varargs functions changed to get va_lists working on systems that
  implement va_lists as arrays.
* Improvements to the gdkrgb code.
* Improvements to Gdk color handling so we greatly reduce server traffic and
  don't leak colors anymore.
* Improved internal widget tree iterators (the GtkContainer::foreach signal
  vanished because of this).
* Option menus can have the keyboard focus now.
* More fixups to the text widget.
* GtkFileSelection should behave much more nicely in combination with AFS now.
* Support for label underlining.
* Support for GLib 1.1.3 log domains.
* Documentation improvements.
* Configuration fixes on various platforms.
* Miscellaneous fixes to XInput support.
* Build with shared library dependencies on Linux
* Fix for a major bug in the type systems memory allocation code that could
  cause random crashes.
* Libtool update to version 1.2b.
* Lots of bugfixes and cleanups again ;)


What is new in GTK+ 1.1.1:

* Tutorial updates and additions.
* Key binding support for GtkListItems and GtkList.
* Extended selection mode and autoscrolling for GtkLists.
* A GtkCtree now operates on GtkCTreeNode* structures rather than GList*.
* GtkCTreeNodes can now be created from GNode trees.
* Bug fixes for GtkNotebook, GtkCList, GtkCombo and GdkWindow reparentation.


What is new in GTK+ 1.1.0:

* New widget GtkFontSelector.
* New featurefull progress bar.
* New container widget GtkPacker.
* New object GtkItemFactory, GtkMenuFactory is deprecated.
* New key binding system, configurable via rcfiles, similar to styles.
* New widget GtkCTree with drag selections and keyboard movement and
  and horizontal scrolling. Features also implemented for GtkCList.
* Significant speedups to widget creation and destruction through caching
  colormap and visual queries to the XServer.
* Speedups for type creation and especially gtk_type_is_a() checks.
* Speedups in signal lookup, creation and emissions and connection handling.
* Minor speedups with object data allocation and destruction.
* Additions to the signal handling API (e.g. *_emitv).
* Support for rc-file reparsing.
* Resizing logic is now implemented on container widget basis, rather than
  for toplevel GtkWindows only.
* Buttons support relief styles now.
* Some widgets are now allocated through memchunks to behave more memory wise.
* Newly included file gtkfeatures.h which defines compatibility macros to
  test for certain API features upon program compilation.
* Child arguments support for container widgets.
* Far better support for object arguments, revamp of the underlying
  mechanism for speed and reusability. Child/object arguments don't
  need to be preceeded by the "GtkType::" portion anymore.
* Removed GtkAcceleratorTable in favour of GtkAccelGroup, accelerator display
  is now performed by a new widget GtkAccelLabel.
* Overhaul of the resizing code. Resizing behaviour can now be specified
  on GtkContainer basis, so the underlying algorithm isn't only available
  for GtkWindows.
* GtkTables are now fully resizable.
* The GtkType system now supports an additional base class initialization
  function.
* GtkStyles and key bindings can now be looked up depending on the base
  types of a widget, through a new keyword `class' in rc files.
* GtkButton derives from GtkBin (finally).  
* More descriptive error messages on rc parsing.  
* Runtime information is available to query enum/flag definition values.
* Upgrade to libtool-1.2
* Legions of bug fixes, memory leaks, segfaults, of-by-something errors...
  including those that already went into the 1.0.x branch.
* A big bunch of features and cosmetic fixups that just got lost in
  the masses of changes.
