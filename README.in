General Information
===================

This is GTK+ version @GTK_VERSION@. GTK+ is a multi-platform toolkit for
creating graphical user interfaces. Offering a complete set of widgets,
GTK+ is suitable for projects ranging from small one-off projects to
complete application suites.

GTK+ is free software and part of the GNU Project. However, the
licensing terms for GTK+, the GNU LGPL, allow it to be used by all
developers, including those developing proprietary software, without any
license fees or royalties.

The official ftp site is:
  ftp://ftp.gtk.org/pub/gtk

The official web site is:
  http://www.gtk.org/

Information about mailing lists can be found at
  http://www.gtk.org/mailinglists.html

Installation
============

See the file 'INSTALL'

Release notes
=============

* GTK+ 2.6 supports clipboard persistency. To make use of this feature,
  a clipboard manager following the specification at
  http://www.freedesktop.org/wiki/Standards_2fclipboard_2dmanager_2dspec
  must be running. A sample implementation of such a clipboard manager
  is available at 
  http://people.imendio.com/andersca/archives/clipboard-manager-0.3.tar.gz

* The icon theme code in GTK+ 2.6 follows the icon theme specification.
  Therefore, icon themes are looked for in $HOME/.icons, $XDG_DATA_HOME/icons, 
  $XDG_DATA_DIRS/icons and /usr/share/pixmaps.

* The icon theme code in GTK+ 2.6 can make use of mmap()able cache files
  to avoid a lot of disk searching overhead. GTK+ includes a utility named
  gtk-update-icon-cache to generate these cache files. For further details,
  see the gtk-update-icon-cache man page or the GTK+ documentation.

* GTK+ uses a technique involving macros for reducing the amount of PLT
  redirections which has the side effect that the names of internally used
  GLib functions are prefixed with IA__. The g_return_if_fail() macros
  strip this prefix away, but it will show up e.g. in a debugger.

* The linux framebuffer GDK backend included in the gdk/linux-fb of GTK+
  is provided on a as-is basis and has not been tested at all. No
  guarantees about the degree of workingness or about future
  compatibility are provided.

* The following functions have been deprecated in GTK+ 2.6:
  gdk_pango_context_set_colormap
  gtk_cell_renderer_editing_canceled

* The new GtkFileChooser widget emphasizes simplicity and thus does 
  not provide a navigation entry by default when opening files. 
  Experienced command line users will likely want to make heavy use of
  the location dialog brought up by the Control-L key shortcut.

* The GTK+ libraries use an '_' prefix to indicate private symbols that
  must not be used by applications. On some platforms, symbols beginning 
  with prefixes such as _gtk, _gdk, and _pango will be exported
  from the library, on others not. In no case can applications
  use these private symbols. In addition to that, GTK+ 2.6 makes several
  symbols private which were not in any installed header files and
  were never intended to be exported.

* The gdk_pixbuf_xlib library included in the contrib/ directory of GTK+
  is provided on a as-is basis and has not been tested at all. No
  guarantees about the degree of workingness or about future
  compatibility are provided.

* The assumption of GLib and GTK+ by default is that filenames on the
  filesystem are encoded in UTF-8 rather than the encoding of the locale;
  the GTK+ developers consider that having filenames whose interpretation
  depends on the current locale is fundamentally a bad idea.

  If you have filenames encoded in the encoding of your locale, then
  you may want to set the G_FILENAME_ENCODING environment variable:
  
   G_FILENAME_ENCODING=@local
   export G_FILENAME_ENCODING

  (Earlier versions of GLib 2.x required a different environment variable
  setting; G_BROKEN_FILENAMES=1 to achieve the same effect; this 
  is still supported, but G_FILENAME_ENCODING is preferred.)
  Best integration of GTK+ 2.6 with the environment is achieved by 
  using a UTF-8 locale.

How to report bugs
==================

Bugs should be reported to the GNOME bug tracking system.
(http://bugzilla.gnome.org, product gtk+.) You will need to create an
account for yourself.
  
In the bug report please include:
  
* Information about your system. For instance:

   - What operating system and version
   - What version of X
   - For Linux, what version of the C library

  And anything else you think is relevant.

* How to reproduce the bug. 

  If you can reproduce it with the testgtk program that is built in the
  gtk/ subdirectory, that will be most convenient.  Otherwise, please
  include a short test program that exhibits the behavior.  As a last
  resort, you can also provide a pointer to a larger piece of software
  that can be downloaded.

* If the bug was a crash, the exact text that was printed out when the
  crash occured.

* Further information such as stack traces may be useful, but is not
  necessary. If you do send a stack trace, and the error is an X error,
  it will be more useful if the stacktrace is produced running the test
  program with the --sync command line option.

Patches
=======

Patches should also be submitted to bugzilla.gnome.org. If the patch
fixes an existing bug, add the patch as an attachment to that bug
report.

Otherwise, enter a new bug report that describes the patch, and attach
the patch to that bug report.

Bug reports containing patches should include the PATCH keyword in their
keyword fields. If the patch adds to or changes the GTK programming
interface, the API keyword should also be included.
  
Patches should be in unified diff form. (The -u option to GNU diff.)
